{"version":3,"sources":["../lib/event-emitter.js"],"names":["utils","emitters","warn","console","process","emitWarning","EventHandlers","prototype","Object","create","$getMaxListeners","_maxListeners","undefined","EventEmitter","defaultMaxListeners","addListener","type","listener","prepend","m","events","existing","TypeError","_events","_eventsCount","newListener","emit","unshift","push","warned","call","length","onceWrap","fired","g","removeListener","apply","arguments","on","n","isNaN","prependListener","er","handler","len","args","i","doError","error","Error","err","context","isFn","emitNone","emitOne","emitTwo","emitThree","Array","emitMany","list","position","originalListener","spliceOne","listeners","keys","key","removeAllListeners","evlistener","ret","unwrapListeners","Reflect","ownKeys","getOwnPropertyNames","concat","getOwnPropertySymbols"],"mappings":"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","file":"event-emitter.js","sourcesContent":["import * as utils from \"./utils\";\nimport * as emitters from \"./emitters\";\n\nlet warn = console.warn;\nif (typeof process !== 'undefined' && typeof process.emitWarning === 'function') {\n    warn = process.emitWarning;\n}\n\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nlet $getMaxListeners = function() {\n    if (this._maxListeners === undefined) {\n        return EventEmitter.defaultMaxListeners;\n    }\n\n    return this._maxListeners;\n};\n\nlet addListener = function(type, listener, prepend) {\n    let m, events, existing;\n\n    if (typeof listener !== 'function') {\n        throw new TypeError('\"listener\" argument must be a function');\n    }\n\n    events = this._events;\n    if (!events) {\n        events = this._events = new EventHandlers();\n        this._eventsCount = 0;\n    } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener) {\n            this.emit('newListener', type,\n                listener.listener ? listener.listener : listener);\n\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = this._events;\n        }\n        existing = events[type];\n    }\n\n    if (!existing) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        events[type] = listener;\n        ++this._eventsCount;\n    } else {\n        if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = prepend ? [listener, existing] :\n                [existing, listener];\n        } else {\n            // If we've already got an array, just append.\n            if (prepend) {\n                existing.unshift(listener);\n            } else {\n                existing.push(listener);\n            }\n        }\n\n        // Check for listener leak\n        if (!existing.warned) {\n            m = $getMaxListeners.call(this);\n            if (m && m > 0 && existing.length > m) {\n                existing.warned = true;\n                warn('Possible EventEmitter memory leak detected. ' +\n                    `${existing.length} ${type} listeners added. ` +\n                    'Use emitter.setMaxListeners() to increase limit');\n            }\n        }\n    }\n\n    return this;\n};\n\nlet onceWrap = function(type, listener) {\n    let fired = false;\n\n    function g() {\n        this.removeListener(type, g);\n\n        if (!fired) {\n            fired = true;\n            listener.apply(this, arguments);\n        }\n    }\n\n    g.listener = listener;\n    return g;\n};\n\nexport class EventEmitter\n{\n    constructor() {\n        this.addListener = this.on;\n\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        this._maxListeners = undefined;\n    }\n\n    setMaxListeners(n) {\n        if (typeof n !== 'number' || n < 0 || isNaN(n))\n            throw new TypeError('\"n\" argument must be a positive number');\n\n        this._maxListeners = n;\n        return this;\n    }\n\n    getMaxListeners() {\n        return $getMaxListeners.call(this);\n    }\n\n    on(type, listener) {\n        return addListener.call(this, type, listener, false);\n    }\n\n    once(type, listener) {\n        if (typeof listener !== 'function')\n            throw new TypeError('\"listener\" argument must be a function');\n\n        this.on(type, onceWrap.call(this, type, listener));\n        return this;\n    }\n\n    prependListener(type, listener) {\n        return addListener.call(this, type, listener, true);\n    }\n\n    prependOnceListener(type, listener) {\n        if (typeof listener !== 'function')\n            throw new TypeError('\"listener\" argument must be a function');\n\n        this.prependListener(type, onceWrap.call(this, type, listener));\n        return this;\n    }\n\n    emit(type) {\n        let er, handler, len, args, i, events;\n        let doError = (type === 'error');\n\n        events = this._events;\n        if (events) {\n            doError = (doError && events.error == null);\n        } else if (!doError) {\n            return false;\n        }\n\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            er = arguments[1];\n\n            if (er instanceof Error) {\n                throw er; // Unhandled 'error' event\n            } else {\n                // At least give some kind of context to the user\n                var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n                err.context = er;\n\n                throw err;\n            }\n        }\n\n        handler = events[type];\n\n        if (!handler) {\n            return false;\n        }\n\n        let isFn = typeof handler === 'function';\n        len = arguments.length;\n        switch (len) {\n            // fast cases\n            case 1:\n                emitters.emitNone(handler, isFn, this);\n                break;\n\n            case 2:\n                emitters.emitOne(handler, isFn, this, arguments[1]);\n                break;\n\n            case 3:\n                emitters.emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n                break;\n\n            case 4:\n                emitters.emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n                break;\n\n            // slower\n            default:\n                args = new Array(len - 1);\n                for (i = 1; i < len; i++) {\n                    args[i - 1] = arguments[i];\n                }\n\n                emitters.emitMany.call(this, handler, isFn, args);\n        }\n\n        return true;\n    }\n\n    removeListener(type, listener) {\n        let list, events, position, i, originalListener;\n\n        if (typeof listener !== 'function') {\n            throw new TypeError('\"listener\" argument must be a function');\n        }\n\n        events = this._events;\n        if (!events) {\n            return this;\n        }\n\n        list = events[type];\n        if (!list) {\n            return this;\n        }\n\n        if (list === listener || (list.listener && list.listener === listener)) {\n            if (--this._eventsCount === 0) {\n                this._events = new EventHandlers();\n            } else {\n                delete events[type];\n                if (events.removeListener) {\n                    this.emit('removeListener', type, list.listener || listener);\n                }\n            }\n        } else if (typeof list !== 'function') {\n            position = -1;\n\n            for (i = list.length; i-- > 0;) {\n                if (list[i] === listener ||\n                    (list[i].listener && list[i].listener === listener)) {\n                    originalListener = list[i].listener;\n                    position = i;\n                    break;\n                }\n            }\n\n            if (position < 0) {\n                return this;\n            }\n\n            if (list.length === 1) {\n                list[0] = undefined;\n                if (--this._eventsCount === 0) {\n                    this._events = new EventHandlers();\n                    return this;\n                } else {\n                    delete events[type];\n                }\n            } else {\n                utils.spliceOne(list, position);\n            }\n\n            if (events.removeListener) {\n                this.emit('removeListener', type, originalListener || listener);\n            }\n        }\n\n        return this;\n    }\n\n    removeAllListeners(type) {\n        var listeners, events;\n\n        events = this._events;\n        if (!events) {\n            return this;\n        }\n\n        // not listening for removeListener, no need to emit\n        if (!events.removeListener) {\n            if (arguments.length === 0) {\n                this._events = new EventHandlers();\n                this._eventsCount = 0;\n            } else if (events[type]) {\n                if (--this._eventsCount === 0) {\n                    this._events = new EventHandlers();\n                } else {\n                    delete events[type];\n                }\n            }\n            return this;\n        }\n\n        // emit removeListener for all listeners on all events\n        if (arguments.length === 0) {\n            for (let key of Object.keys(events)) {\n                if (key === 'removeListener') {\n                    continue;\n                }\n\n                this.removeAllListeners(key);\n            }\n\n            this.removeAllListeners('removeListener');\n            this._events = new EventHandlers();\n            this._eventsCount = 0;\n            return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n            this.removeListener(type, listeners);\n        } else if (listeners) {\n            // LIFO order\n            do {\n                this.removeListener(type, listeners[listeners.length - 1]);\n            } while (listeners[0]);\n        }\n\n        return this;\n    }\n\n    listeners(type) {\n        var evlistener;\n        var ret;\n        var events = this._events;\n\n        if (!events) {\n            ret = [];\n        } else {\n            evlistener = events[type];\n            if (!evlistener) {\n                ret = [];\n            } else if (typeof evlistener === 'function') {\n                ret = [evlistener.listener || evlistener];\n            } else {\n                ret = utils.unwrapListeners(evlistener);\n            }\n        }\n\n        return ret;\n    }\n\n    listenerCount(type) {\n        const events = this._events;\n\n        if (events) {\n            const evlistener = events[type];\n\n            if (typeof evlistener === 'function') {\n                return 1;\n            } else if (evlistener) {\n                return evlistener.length;\n            }\n        }\n\n        return 0;\n    }\n\n    eventNames() {\n        if (this._eventsCount <= 0) {\n            return [];\n        }\n\n        if (typeof Reflect !== 'undefined') {\n            return Reflect.ownKeys(this._events)\n        }\n\n        return Object.getOwnPropertyNames(this._events).concat(Object.getOwnPropertySymbols(this._events));\n    }\n}\n\nEventEmitter.defaultMaxListeners = 10;\n\nexport default EventEmitter;\n"]}